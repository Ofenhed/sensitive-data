name: Rust

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:

  format:

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Format
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: -- --check

  build:

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - name: Linux Cache
      if: runner.os != 'Windows'
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Windows Cache
      if: runner.os == 'Windows'
      uses: actions/cache@v2
      with:
        path: |
          C:\Rust\.cargo\registry
          C:\Rust\.cargo\git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Build
      uses: actions-rs/cargo@v1
      with:
        command: build
    - uses: actions-rs/clippy-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        args: --all-features
    - name: Run tests
      uses: actions-rs/cargo@v1
      with:
        command: test
